
class P(DistProcess):
 def setup(ps):
   reqc = None
   s = ps
   waiting = set()
   replied = set()

 def cs():
   # to enter cs, enque and send request to all, then await replies from all
     --start
     reqc = logical_clock()
     send(Request(reqc), s)

     --reply
     await(len(replied) == len(s))

   # critical section
     --cs
     output("In critical section")
     work()

   # to exit cs, deque and send releases to all
     --end
     reqc = None
     output("Is releasing.")
     send(Reply(logical_clock()), waiting)
     waiting = set()
     replied = set()
   
 def main():
   while True:
     cs()
     work()

 # when receiving requests from others, enque and reply
 def OnRequest():
     if (reqc == None or (_timestamp, _source) < (reqc, self)):
       send(Reply(logical_clock()), _source)
     else:
       waiting.add(_source)

 def OnReply(lc):
     if reqc != None and lc > reqc: replied.add(_source)
